from openai import OpenAI
import os
import json
import re
from dotenv import load_dotenv

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î environment variables
load_dotenv()

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def analyze_sentiment_and_category(content, image_url=None, post_product="Hygiene"):
    """
    ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå Facebook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå Hygiene
    """
    prompt = f"""
    ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç Consumer Insight ‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡πÇ‡∏†‡∏Ñ‡πÉ‡∏ô‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Ç‡∏≠‡∏á Social Media ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡∏ô‡πâ‡∏≥‡∏¢‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏ú‡πâ‡∏≤‡∏ô‡∏∏‡πà‡∏° Hygiene

    üéØ **Context ‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ô‡∏µ‡πâ**
    - Product: {post_product}
    - Image URL (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ): {image_url}
    - ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå Hygiene ‡∏ã‡∏∂‡πà‡∏á‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏Å‡∏•‡∏¥‡πà‡∏ô ‡∏™‡∏µ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏ô‡πâ‡∏≥‡∏¢‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏ú‡πâ‡∏≤‡∏ô‡∏∏‡πà‡∏°

    üéØ **‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå**
    ‡∏ä‡πà‡∏ß‡∏¢‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å (Sentiment), ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà (Category), ‡πÅ‡∏•‡∏∞ Keyword ‡∏ó‡∏µ‡πà‡πÄ‡∏î‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå Facebook ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ ‡πÇ‡∏î‡∏¢‡∏¢‡∏∂‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç:

    ---

    üîπ **Category (‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà)** ‚Äî *‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 1 ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"*
    - ‡πÉ‡∏ä‡πâ‡∏î‡∏µ
    - ‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏´‡∏≠‡∏°
    - ‡∏£‡∏≤‡∏Ñ‡∏≤
    - ‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô
    - ‡πÑ‡∏°‡πà‡∏´‡∏≠‡∏°
    - ‡∏Ñ‡∏£‡∏≤‡∏ö‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å
    - ‡πÅ‡∏ó‡πá‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
    - ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
    - ‡∏≠‡∏∑‡πà‡∏ô‡πÜ

    üîπ **Sentiment**
    - Positive ‚Üí ‡∏ä‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏ä‡∏≠‡∏ö‡∏Å‡∏•‡∏¥‡πà‡∏ô, ‡∏ä‡∏≠‡∏ö‡∏™‡∏µ, ‡∏≠‡∏¢‡∏≤‡∏Å‡∏•‡∏≠‡∏á, ‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß, ‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏™‡∏∞‡∏≠‡∏≤‡∏î/‡∏ô‡∏∏‡πà‡∏°
    - Neutral ‚Üí ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° (‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô, ‡∏£‡∏≤‡∏Ñ‡∏≤), ‡πÅ‡∏ó‡πá‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô, ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö, ‡∏Ñ‡∏≥‡πÄ‡∏â‡∏¢‡πÜ
    - Negative ‚Üí ‡∏ß‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡πå‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏´‡∏≠‡∏°, ‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÅ‡∏£‡∏á, ‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î, ‡∏°‡∏µ‡∏Ñ‡∏£‡∏≤‡∏ö, ‡∏ú‡∏¥‡∏ß‡πÅ‡∏û‡πâ ‡∏Ø‡∏•‡∏Ø

    üîπ **Keyword Group**
    - ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Ñ‡∏≥‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏à‡∏≤‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô "‡∏´‡∏≠‡∏°", "‡∏ô‡∏∏‡πà‡∏°", "‡∏ä‡∏°‡∏û‡∏π", "‡∏Å‡∏•‡∏¥‡πà‡∏ô", "‡πÅ‡∏û‡πâ", "‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤", ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô ‚ÄúHygiene Berry Toast‚Äù
    - ‡∏´‡πâ‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏Ñ‡∏≥ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ

    ---

    üìå **‡∏Å‡∏é‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°**
    1. ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡πá‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏π‡∏î‡∏ñ‡∏∂‡∏á author ‡πÄ‡∏â‡∏¢ ‡πÜ ‚Üí category = "‡πÅ‡∏ó‡πá‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô", sentiment = "neutral"
    2. ‡∏´‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠ author ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‚Üí category = "‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö", sentiment = "neutral"
    3. ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ ‚Üí ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á Hygiene ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏™‡∏µ‡πÄ‡∏î‡πà‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏°‡∏û‡∏π, ‡∏ü‡πâ‡∏≤, ‡∏Ç‡∏≤‡∏ß
    4. ‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏ï‡∏ô‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏≥‡πÄ‡∏î‡∏µ‡∏¢‡∏ß

    ---

    üì§ **‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô):**
    {{
        "sentiment": "Positive",    // ‡∏´‡∏£‡∏∑‡∏≠ neutral / negative
        "reason": "‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏™‡∏±‡πâ‡∏ô ‡πÜ ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏´‡∏≠‡∏°‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á",
        "keyword_group": "‡∏´‡∏≠‡∏°",     // ‡∏Ñ‡∏≥‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        "category": "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏´‡∏≠‡∏°"     // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
    }}

    ‚ùå ‡∏´‡πâ‡∏≤‡∏°:
    - ‡πÉ‡∏™‡πà backtick ‡∏´‡∏£‡∏∑‡∏≠ ```json
    - ‡πÉ‡∏™‡πà‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    - ‡∏ï‡∏≠‡∏ö‡πÄ‡∏Å‡∏¥‡∏ô JSON ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î

    üéØ **‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå**:
    "{content}"

    üéØ **Image URL**:
    "{image_url}"
    """

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "You are an expert Thai sentiment categorizer and consumer insight analyst."},
            {"role": "user", "content": prompt}
        ],
        temperature=0.2
    )

    try:
        raw = response.choices[0].message.content

        # üîß clean backtick ‡∏´‡∏£‡∏∑‡∏≠ ```json
        clean = re.sub(r"```json|```", "", raw).strip()

        # üîß ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡∏¥‡∏ô JSON, ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ {...}
        match = re.search(r"\{.*\}", clean, re.DOTALL)
        if match:
            result = json.loads(match.group())
        else:
            raise ValueError("JSON not found in AI response")

        # ‚úÖ ‡πÅ‡∏Å‡πâ sentiment format ‡∏ï‡∏≤‡∏°‡πÇ‡∏à‡∏ó‡∏¢‡πå
        sentiment = result.get("sentiment", "").strip()
        if sentiment.lower() == "positive":
            sentiment = "Positive"
        elif sentiment.lower() == "neutral":
            sentiment = "neutral"
        elif sentiment.lower() == "negative":
            sentiment = "negative"
        else:
            sentiment = ""

        final_result = {
            "sentiment": sentiment,
            "reason": result.get("reason", "").strip(),
            "keyword_group": result.get("keyword_group", "").strip(),
            "category": result.get("category", "").strip(),
        }

        return final_result

    except Exception as e:
        print("‚ùå Error parsing AI response:", e)
        print("Raw response:", raw)
        return {"sentiment": "", "reason": "", "keyword_group": "", "category": ""}
